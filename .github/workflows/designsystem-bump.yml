name: Oppgrader designsystemet

on:
  workflow_call:


jobs:
  oppgrader-designsystemet:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Skap SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Lagre gjeldende versjon
        run: |
          node -e "
          const packageJson = require('./package.json');
          const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };
          let minVersion = null;
          for (const [pkg, version] of Object.entries(dependencies)) {
            if (pkg.startsWith('@navikt/aksel') || pkg.startsWith('@navikt/ds')) {
              const cleanVersion = version.replace('^', '');
              if (minVersion === null || compareVersions(cleanVersion, minVersion) < 0) {
                 minVersion = cleanVersion;
              }
            }
          }
          console.log('OLD_VERSION=' + minVersion);

          function compareVersions(version1, version2) {
            const v1parts = version1.split('.');
            const v2parts = version2.split('.');
            for (let i = 0; i < v1parts.length; ++i) {
              if (parseInt(v1parts[i], 10) < parseInt(v2parts[i], 10)) {
                return -1;
              }
              if (parseInt(v1parts[i], 10) > parseInt(v2parts[i], 10)) {
                return 1;
              }
            }
            return 0;
          }
          " >> $GITHUB_ENV

      - name: Oppgrader designsystem dependencies
        run: npx npm-check-updates '@navikt/aksel*' '@navikt/ds*' -u && npm install
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify same version and set output
        run: |
          node -e "
          const packageJson = require('./package.json');
          const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };
          let newVersion = null;
          for (const [pkg, version] of Object.entries(dependencies)) {
            if (pkg.startsWith('@navikt/aksel') || pkg.startsWith('@navikt/ds')) {
              const cleanVersion = version.replace('^', '');
              if (newVersion === null) {
                newVersion = cleanVersion;
              } else if (newVersion !== cleanVersion) {
                throw new Error('All @navikt/aksel and @navikt/ds dependencies must have the same version');
              }
            }
          }

          console.log('NEW_VERSION=' + newVersion);


          " >> $GITHUB_ENV

      - name: Se om det er major upgrade
        run: |
          node -e "
          const oldVersion = process.env.OLD_VERSION;
          const newVersion = process.env.NEW_VERSION;
          const isMajor = parseInt(oldVersion.split('.')[0], 10) < parseInt(newVersion.split('.')[0], 10);
          console.log('IS_MAJOR=' + isMajor);
          " >> $GITHUB_ENV

      - run: git add package.json

      - name: Sjekk om det var noen endringer
        run: |
          if git diff --staged --quiet; then
            echo "Ingen endringer. Avslutter."
            exit 1
          fi

      - name: Installer dependencies
        run: npm i
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: git add package-lock.json

      - run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'github-action@github.com'

      - name: Lag labeler
        run: |
          if [ "${{ env.IS_MAJOR }}" = "false" ]; then
            echo "LABELS=automerge,designsystemet" >> $GITHUB_ENV
          else
            echo "LABELS=designsystemet" >> $GITHUB_ENV
          fi

      - name: Lag pull request
        run: |
          git checkout -b demo-designsystem-bump-${{env.SHORT_SHA}}
          git commit -m "Oppgradert designsystemet fra ${{env.OLD_VERSION}} til ${{env.NEW_VERSION}}"
          git config --global push.default current
          git push
          gh pr create --title "Oppgradert designsystemet fra ${{env.OLD_VERSION}} til ${{env.NEW_VERSION}}" --body "Automatisk lagd i GitHub actions" --base master --label "${{ env.LABELS }}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Trigg workflow
        run: gh workflow run workflow.yml --ref demo-designsystem-bump-${{env.SHORT_SHA}}
        env:
          GH_TOKEN: ${{ github.token }}
