# Apper som bruker denne https://cs.github.com/?scopeName=All+repos&scope=&q=org%3Anavikt+%22navikt%2Fflex-github-actions-workflows%2F.github%2Fworkflows%2Fnext-js-no-tests.yml%40main%22+NOT+is%3Aarchived

name: Next js
on:
  workflow_call:
    inputs:
      app:
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      port:
        required: false
        default: '8080'
        type: string
      base-path:
        required: true
        type: string
    outputs:
      image:
        value: ${{ jobs.gar-publish.outputs.image }}

jobs:
  validate-branch:
    name: Validate branch
    runs-on: ubuntu-latest
    steps:
      - name: Check if branch is main
        if: github.ref_name == 'main'
        run: |
          echo "ERROR: This workflow cannot be run on the main branch, please run the full workflow with tests"
          exit 1

  build-and-publish:
    needs: validate-branch
    permissions:
      packages: 'read'
      contents: 'read'
      id-token: 'write'
    name: Bygg, test og publiser docker image
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: next.js cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install npm dependencies
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm ci
      - name: Build application
        run: npm run build
      - name: cache workspace
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}

  cdn-upload:
    permissions:
       contents: 'read'
       id-token: 'write'
    timeout-minutes: 15
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: cache workspace
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}
      - name: Last opp static files til NAV CDN
        if: startsWith(github.ref_name, 'dev-')  || startsWith(github.ref_name, 'demo-')
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: flex
          source: ./.next/static
          destination: /${{github.event.repository.name}}/_next
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  gar-publish:
    permissions:
      packages: 'read'
      contents: 'read'
      id-token: 'write'
    name: gar-publish
    timeout-minutes: 15
    needs: build-and-publish
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: cache workspace
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}
      - name: prune dev dependencies
        run: npm prune --production
      - run: rm .env
      - run: touch .env
      - name: docker-build-push
        if: startsWith(github.ref_name, 'dev-')  || startsWith(github.ref_name, 'demo-')
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: flex
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}


  nais-deploy:
    needs: [build-and-publish, cdn-upload, gar-publish]
    uses: navikt/flex-github-actions-workflows/.github/workflows/nais-deploy-dev-og-prod.yml@main
    with:
      image: ${{ needs.gar-publish.outputs.image }}
      app: ${{ inputs.app }}
      dev-only: true
    secrets: inherit

  deploy-demo-branch-til-dev-gcp:
    if: startsWith(github.ref_name, 'demo-') || startsWith(github.ref_name, 'dev-')
    name: Deploy demo branch til dev-gcp
    timeout-minutes: 15
    needs: [build-and-publish, cdn-upload, gar-publish]
    runs-on: ubuntu-latest
    env:
      DEMO_APPNAME: demo-${{ inputs.app }}-${{ github.ref_name }}
      DEMO_INGRESS: ${{ inputs.app }}-${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy demo branch til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/app/demo.yaml
          IMAGE: ${{ needs.gar-publish.outputs.image }}
          VAR: appname=${{ env.DEMO_APPNAME }},replicas=1,branchState=alive,ingress=https://${{ env.DEMO_INGRESS }}.ekstern.dev.nav.no/${{inputs.base-path}},TTL_HOURS=168h
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Ny demo versjon av ${{ inputs.app }} ute :rocket: https://${{ env.DEMO_INGRESS }}.ekstern.dev.nav.no/${{inputs.base-path}}'
          SLACK_TITLE: ${{ github.ref_name }}
          SLACK_USERNAME: Demo deploy
          SLACK_ICON: ':lab_coat:'
          SLACK_WEBHOOK: ${{ secrets.LABS_DEPLOY_WEBHOOK }}
