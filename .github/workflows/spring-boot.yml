# Apper som bruker denne https://cs.github.com/?scopeName=All+repos&scope=&q=org%3Anavikt+%22navikt%2Fflex-github-actions-workflows%2F.github%2Fworkflows%2Fspring-boot.yml%40master%22+NOT+is%3Aarchived

name: Spring boot
on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string


jobs:
  build-and-publish:
    name: Bygg, test og publiser docker image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.lag-image.outputs.image }}
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Generer image
        id: lag-image
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=8 HEAD)
          VERSION=$TIME-$COMMIT
          echo "::set-output name=image::ghcr.io/navikt/${{ inputs.app }}:$VERSION"
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Lint koden
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew ktlintCheck
      - name: Run tests
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew test
      - name: Build jar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew bootJar -x test
      - name: Build and publish Docker image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build -t ${{ steps.lag-image.outputs.image }} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker push ${{ steps.lag-image.outputs.image }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        if: failure() && github.ref == 'refs/heads/master'
        env:
            SLACK_COLOR: '#ff0000'
            SLACK_MESSAGE: ${{ inputs.app }} bygget feiler p√• master
            SLACK_TITLE: ':broken_heart:'
            SLACK_WEBHOOK: ${{ secrets.SPOKELSER_WEBHOOK }}

  snyk-monitor-gradle:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=flex-kmy --project-name=${{ github.repository }} --remote-repo-url=https://github.com/${{ github.repository }}.git

  snyk-test-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=flex-kmy --severity-threshold=high --project-name=${{ github.repository }} --remote-repo-url=https://github.com/${{ github.repository }}.git


  snyk-docker:
    needs: build-and-publish
    uses: navikt/flex-github-actions-workflows/.github/workflows/snyk-docker.yml@master
    with:
      image: ${{ needs.build-and-publish.outputs.image }}
    secrets: inherit

  nais-deploy:
    needs: build-and-publish
    uses: navikt/flex-github-actions-workflows/.github/workflows/nais-deploy-dev-og-prod.yml@master
    with:
      image: ${{ needs.build-and-publish.outputs.image }}
      app: ${{ inputs.app }}
    secrets: inherit
